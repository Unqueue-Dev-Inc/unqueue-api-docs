openapi: 3.0.0
info:
  title: Unqueue API
  description: Complete reference documentation for the Unqueue API.
  version: "1"
servers:
  - url: https://us-central1-pickup-things.cloudfunctions.net/api/v1
    description: Main (production) server
  - url: https://us-central1-unqueue-staging.cloudfunctions.net/api/v1
    description: Internal staging server for testing
  - url: http://localhost:5001/unqueue-staging/us-central1/api/v1
    description: Local testing
security:
  - bearerAuth: []

paths:
  /orders/{orderId}:
    get:
      summary: Get a single order
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          description: ID of the order to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "403":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    format: int64
                    example: "You don't have access to view this order"
        "404":
          description: Missing order response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    format: int64
                    example: "order not found"
    patch:
      summary: Update an order
      tags:
        - Orders
      requestBody:
        description: Pass data to update the order
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: "#/components/schemas/Order"
      parameters:
        - name: orderId
          in: path
          description: ID of the order to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: int64
                    example: "abc1234"
  /orders:
    get:
      summary: Gets all orders
      tags:
        - Orders
      parameters:
        - name: getTop
          in: query
          description: Specify how many orders to return
          required: false
          schema:
            type: number
        - name: completed
          in: query
          description: Used to return completed orders only
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Success response
        "401":
          description: Unauthorized request
    post:
      summary: Creates a new order
      tags:
        - Orders
      requestBody:
        description: Pass a an object with order and cart data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerData:
                  type: object
                  properties:
                    userId:
                      type: string
                      example: testUser
                    name:
                      type: string
                      example: Peter John
                    customerEmail:
                      type: string
                      example: pete.john@email.com
                    customerPhone:
                      type: string
                      example: +18687551234
                order:
                  type: object
                  properties:
                    cart:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 1234
                          count:
                            type: number
                            example: 3
                          description:
                            type: string
                            example: Short description of item
                          note:
                            type: string
                          price:
                            type: number
                            example: 60
                          productId:
                            type: string
                            example: 1234
                          title:
                            type: string
                            example: Large T-Shirt
                    cashAmount:
                      type: number
                      example: 40
                    deliveryAddress:
                      type: object
                      properties:
                        address:
                          type: string
                          example: Marble Street
                        location:
                          type: object
                          properties:
                            latitude:
                              type: number
                              example: 10.695589
                            longitude:
                              type: number
                              example: -61.628099
                    deliveryFee:
                      type: number
                      example: 20
                    deliveryWindow:
                      type: string
                      example: Friday 28th October 2022
                    companyOrderId:
                      type: string
                      example: 09
                    paymentMethod:
                      type: string
                      example: "Credit Card"
                    shopperDeliveryFee:
                      type: number
                      example: 20
                    source:
                      type: string
                      example: "wordpress"
                    specialNotes:
                      type: string
                      example: "Leave at the doorstep"
                    timeWindow:
                      type: string
                      example: "daytimeDelivery"
                    total:
                      type: number
                      example: 80
                    type:
                      type: string
                      example: "Delivery"

      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: int64
                    example: "123456"
        "500":
          description: Error response
  /dispatch/delivery-fee:
    post:
      summary: Gets the delivery fee between locations
      tags:
        - Dispatch
      requestBody:
        description: Pass a coordinate object with latitude and longitude
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin:
                  type: object
                  properties:
                    latitude:
                      type: number
                      example: 10.01242
                    longitude:
                      type: number
                      example: 62.01242
                destination:
                  type: object
                  properties:
                    latitude:
                      type: number
                      example: 10.01242
                    longitude:
                      type: number
                      example: 62.01242
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  deliveryFee:
                    type: number
                    format: int64
                    example: 25
                  shopperDeliveryFee:
                    type: number
                    format: int64
                    example: 25
        "404":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    format: int64
                    example: "A delivery fee could not be generated for these locations."
        "500":
          description: Error response
  /dispatch/authorize-payment-for-orders:
    post:
      summary: Authorizes payment for a batch of orders
      tags:
        - Dispatch
      requestBody:
        description: Pass an array of order ids and the credit card CVV. This must be passed as it is required to authorize payments and is not stored on our server.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  items:
                    type: string
                    example: "id01"
                cvv:
                  type: string
                  example: 123
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  succeeded:
                    type: array
                    items:
                      type: string
                      example: "id01"
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        orderId:
                          type: string
                        error:
                          type: string
                  alreadyAuthorized:
                    type: array
                    items:
                      type: string
                      example: "id02"
                  invalid:
                    type: array
                    description: "Order not found in DB"
                    items:
                      type: string
                      example: "id03"
        "400":
          description: Invalid request response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    format: int64
                    example: "No orders were provided"
        "404":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    format: int64
                    example: "A delivery fee could not be generated for these locations."
        "500":
          description: Error response
  /companies/generate-api-key/{companyId}:
    post:
      summary: Generates a new API Key for a company
      tags:
        - Companies
      parameters:
        - name: companyId
          in: path
          description: ID of the company to generate the API key for
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    format: int64
                    example: ey.abc1234.abc1
        "500":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    format: int64
                    example: "An API key could not be generated for these locations."
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        name:
          type: string
          example: Arthur Dent
        accepted:
          type: boolean
          example: true
        cancelled:
          type: boolean
          example: false
        carDetails:
          type: string
          example: "Red Mazda 3"
        cashAmount:
          type: number
          example: 24
        completed:
          type: boolean
          example: false
        completedAt:
          type: string
        count:
          type: number
          example: 24
        createdAt:
          type: string
        customerEmail:
          type: string
        customerLicense:
          type: string
        customerPhone:
          type: string
        deliveryAddress:
          type: string
        deliveryFee:
          type: number
          example: 24
        deliveryWindow:
          type: string
        driverArrived:
          type: boolean
          example: false
        driverArrivedAt:
          type: string
        driverEnRoute:
          type: boolean
        missingItemsPreference:
          type: string
        orderNumber:
          type: string
        owner:
          type: string
        ownerId:
          type: string
        packed:
          type: boolean
        packedAt:
          type: string
        paymentMethod:
          type: string
        pickupTimeDate:
          type: string
        refunded:
          type: boolean
        source:
          type: string
        specialNotes:
          type: string
        storeAddress:
          type: object
        storeHours:
          type: object
        storeId:
          type: string
        storeLogo:
          type: string
        storePhone:
          type: string
        timeWindow:
          type: string
        total:
          type: number
        tripId:
          type: string
        tripOrder:
          type: number
        type:
          type: string
          example: "Delivery"
        unavailableItems:
          type: boolean
      # Both properties are required
      required:
        - id
        - name
